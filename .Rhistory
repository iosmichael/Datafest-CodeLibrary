library("foreign", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
load("/Users/michaelliu/Desktop/Data Analytics/DebTrivedi.rda")
load("/Users/michaelliu/Desktop/Data Analytics/DebTrivedi.rda")
View(DebTrivedi)
install.packages("pscl")
install.packages("sandwich")
library("pscl")
library("sandwich")
library("lmtest")
library("glmnet")
dt <- DebTrivedi[, c(1, 6:8, 13, 15, 18)]
View(dt)
plot(table(dt$ofp))
plot(table(dt$ofp),labels(x="good"))
plot(table(dt$ofp),labels(c("good","good"))
plot(table(dt$ofp),labels(c("good","good"))
plot(table(dt$ofp),labels(c("good","good")))
plot(table(dt$ofp))
plot(ofp ~ numchron, data = dt)
plot(density(ofp),data = dt)
plot(density(ofp, data = dt))
plot(density(dt$ofp))
clog <- function(x) log(x + 0.5)
cfac <- function(x, breaks = NULL) {
if(is.null(breaks)) breaks <- unique(quantile(x, 0:10/10))
x <- cut(x, breaks, include.lowest = TRUE, right = FALSE)
levels(x) <- paste(breaks[-length(breaks)],
ifelse(diff(breaks) > 1,
c(paste("-", breaks[-c(1, length(breaks))] - 1, sep = ""), "+"), ""),
sep = "")
return(x)
}
plot(clog(ofp) ~ cfac(numchron), data = dt)  # number of chronic conditions
plot(clog(ofp) ~ health, data = dt, varwidth = TRUE)  # self-perceived health
summary(dt)
plot(clog(ofp) ~ health, data = dt, varwidth = TRUE)  # self-perceived health
plot(clog(ofp) ~ privins, data = dt, varwidth = TRUE)  # private insurance?
plot(clog(ofp) ~ cfac(hosp, c(0:2, 8)), data = dt)  # number of hospital stays
plot(clog(ofp) ~ gender, data = dt, varwidth = TRUE)  # gender
plot(cfac(ofp, c(0:2, 4, 6, 10, 100)) ~ school, data = dt, breaks = 9)  # years of education
boxplot(age ~ gender, data=DebTrivedi)
boxplot(numchron ~ gender, data=DebTrivedi)
fm_pois <- glm(ofp ~ ., data = dt, family = poisson)
summary(fm_pois)
coeftest(fm_pois, vcov = sandwich)
summary(fm_pois)$coef
exp(coef(fm_pois))
summary(fm_pois)$coef
coeftest(fm_pois, vcov = sandwich)
library("pscl")
library("sandwich")
library("lmtest")
library("glmnet")
install.packages("lmtest")
library("lmtest")
library("sandwich")
library("pscl")
library("glmnet")
install.packages("zoo")
install.packages("zoo")
library("lmtest")
library("glmnet")
library("lmtest")
coeftest(pois.1, vcov=sandwich)
coeftest(fm_pois, vcov = sandwich)
library("sandwich")
coeftest(fm_pois, vcov = sandwich)
fm_qpois <- glm(ofp ~ ., data = dt, family = quasipoisson)
summary(fm_qpois)
df2 <- DebTrivedi
df2$visits <- (df2$ofp + df2$emer)
df3 <- df2[, -(1:5)]
unlist(lapply(df3, function(x) sum(is.na(x))))
pois.1 <- step(glm(visits ~ ., data=df3, family=poisson), direction="both")
summary(pois.1)
coeftest(pois.1, vcov=sandwich)
preds <- setdiff(names(df3), "visits")
lass.1 <- glmnet(y=df3$visits, x=data.matrix(df3[, preds]), family="poisson")
plot(lass.1, label=TRUE)
summary(lass.1)$coef
summary(lass.1)
cv.lass.1 <- cv.glmnet(y=df3$visits, x=data.matrix(df3[, preds]), family="poisson",
nfolds=4406)
cv.lass.1 <- cv.glmnet(y=df3$visits, x=data.matrix(df3[, preds]), family="poisson",
nfolds=4406)
install.packages("pscl")
install.packages("sandwich")
install.packages("lmtest")
library("pscl")
library("sandwich")
library("lmtest")
library("glmnet")
# Demand for care by the elderly
load("/Users/pete/Downloads/DebTrivedi")
# Focus on a subset of the predictors
dt <- DebTrivedi[, c(1, 6:8, 13, 15, 18)]
# Take a look at the distribution of physician office visits
plot(table(dt$ofp))
# Examine ofp by number of chronic conditions
plot(ofp ~ numchron, data = dt)
# Two convenience functions
clog <- function(x) log(x + 0.5)
cfac <- function(x, breaks = NULL) {
if(is.null(breaks)) breaks <- unique(quantile(x, 0:10/10))
x <- cut(x, breaks, include.lowest = TRUE, right = FALSE)
levels(x) <- paste(breaks[-length(breaks)],
ifelse(diff(breaks) > 1,
c(paste("-", breaks[-c(1, length(breaks))] - 1, sep = ""), "+"), ""),
sep = "")
return(x)
}
# Examine univariate relationships
plot(clog(ofp) ~ cfac(numchron), data = dt)  # number of chronic conditions
plot(clog(ofp) ~ health, data = dt, varwidth = TRUE)  # self-perceived health
plot(clog(ofp) ~ privins, data = dt, varwidth = TRUE)  # private insurance?
plot(clog(ofp) ~ cfac(hosp, c(0:2, 8)), data = dt)  # number of hospital stays
plot(clog(ofp) ~ gender, data = dt, varwidth = TRUE)  # gender
plot(cfac(ofp, c(0:2, 4, 6, 10, 100)) ~ school, data = dt, breaks = 9)  # years of education
boxplot(age ~ gender, data=DebTrivedi)
boxplot(numchron ~ gender, data=DebTrivedi)
fm_pois <- glm(ofp ~ ., data = dt, family = poisson)
summary(fm_pois)$coef
exp(coef(fm_pois))
coeftest(fm_pois, vcov = sandwich)
fm_qpois <- glm(ofp ~ ., data = dt, family = quasipoisson)
summary(fm_qpois)
# Let's try some of the other predictors
df2 <- DebTrivedi
# Since emergency room visits are often substitutes
# for physician office visits, let's look at them together
# as "visits".
df2$visits <- (df2$ofp + df2$emer)
# Restrict the dataset to "visits" and the predictors.
df3 <- df2[, -(1:5)]
# Check for missing values first
unlist(lapply(df3, function(x) sum(is.na(x))))
pois.1 <- step(glm(visits ~ ., data=df3, family=poisson), direction="both")
summary(pois.1)
coeftest(pois.1, vcov=sandwich)
preds <- setdiff(names(df3), "visits")
lass.1 <- glmnet(y=df3$visits, x=data.matrix(df3[, preds]), family="poisson")
plot(lass.1, label=TRUE)
set.seed(103)
cv.lass.1 <- cv.glmnet(y=df3$visits, x=data.matrix(df3[, preds]), family="poisson",
nfolds=4406)
datam <- read.csv("/Users/michaelliu/Desktop/data")
datam <- read.csv("/Users/michaelliu/Desktop/data.xls")
datam <- read.csv("~/Desktop/data.xlsx")
datam <- read.csv("~/Desktop/data.xlsx")
datam <- read.csv("~/Desktop/data.xlsx",header = c("t","infected"))
datam <- read.csv("~/Desktop/data.xlsx")
datam <- read.csv("~/Desktop/smokers.csv")
View(datam)
library(lmtest)
summary(datam)
datam <- read.csv("~/Desktop/smokers.csv")
summary(datam)
summary(datam$headers)
library(ISIR)
library(ISIL)
library(ISLR)
boot(Portfolio ,alpha.fn,R=1000)
set.seed(1)
alpha.fn(Portfolio,sample(100,100,replace=T))
alpha.fn <- function(data,index){
+ X=data$X[index]
+ Y=data$Y[index]
+ return((var(Y)-cov(X,Y))/(var(X)+var(Y)-2*cov(X,Y)))}
alpha.fn(Portfolio,sample(100,100,replace=T))
alpha.fn(Portfolio,sample(100,100,replace=T))
boot(Portfolio ,alpha.fn,R=1000)
alpha.fn <- function(data,index){
X=data$X[index]
Y=data$Y[index]
return((var(Y)-cov(X,Y))/(var(X)+var(Y)-2*cov(X,Y)))}
alpha.fn(Portfolio,sample(100,100,replace=T))
boot(Portfolio ,alpha.fn,R=1000)
install.packages("boot")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
boot(Portfolio ,alpha.fn,R=1000)
library("ResourceSelection")
library("gam")
setwd("/Users/Pete/Google Drive/Data Analysis Course/Datasets/")
setwd("/Users/petermeyer/Google Drive/Data Analysis Course/Datasets/")
load("chi911.Rdata")
summary(chi911)
bw <- subset(chi911[, setdiff(names(chi911), "DAGE")],
(RACE %in% c("black", "white")))
round((1 - nrow(bw) / nrow(chi911)) * 100, 1)
summary(bw)
bw$Dischrge <- as.numeric(bw$DISCHRGE) - 1
xtabs(~ Dischrge + DISCHRGE, bw)
bw$Admit <- as.numeric(bw$ADMIT) - 1
xtabs(~ Admit + ADMIT, bw)
bw$Female <- as.numeric(bw$GENDER) - 1
xtabs(~ Female + GENDER, bw)
bw$Black <- as.numeric(bw$RACE == "black")
xtabs(~ Black + RACE, bw)
bwcr <- subset(bw, WITN != "missing" & BCPR != "missing" & PARAWIT != "missing")
bwcr$Witn <- as.numeric(factor(as.character(bwcr$WITN))) - 1
xtabs(~ Witn + WITN, bwcr)
bwcr$Bcpr <- as.numeric(factor(as.character(bwcr$BCPR))) - 1
xtabs(~ Bcpr + BCPR, bwcr)
bwcr$Parawit <- as.numeric(factor(as.character(bwcr$PARAWIT))) - 1
xtabs(~ Parawit + PARAWIT, bwcr)
bwcr <- bwcr[, c("Dischrge", "Admit", "RESPTIME", "AGE", "Female",
"Black", "Witn", "Bcpr", "Parawit",
"RYTHM")]
summary(bwcr)
round((nrow(bw) - nrow(bwcr)) / nrow(bw) * 100, 1)
glm.0 <- glm(Dischrge ~ 1, data=bw, family=binomial)
glm.1 <- glm(Dischrge ~ RESPTIME + AGE + Female + Black + WITN + BCPR + PARAWIT + RYTHM, data=bw,
family=binomial)
step.0 <- step(glm.0, scope = ~ RESPTIME + AGE + Female + Black + WITN + BCPR + PARAWIT + RYTHM,
trace=TRUE, direction="both")
step.1 <- step(glm.1, trace=TRUE, direction="both")
# These both agree that all are significant except for Female.
# C. Primary analysis
# Check to see which are significant by a likelihood ratio test.
summary(step.1)
anova(step.1, test="Chisq")
# The terms are all significant with the exception of AGE,
# which is borderline. I leave it in, but the results would
step.1x <- update(step.1, . ~ . - AGE)
summary(step.1x)
exp(coef(step.1))
x <- bw$Dischrge
y <- predict.glm(step.1, type="response")
hoslem.test(x=x, y=y)
glm.ns.1 <- update(step.1, . ~ . - RESPTIME + ns(RESPTIME, df=5))
plot.gam(glm.ns.1, rugplot=FALSE, se=TRUE)
with(subset(bw, Female==1), rug(x=RESPTIME, col="red", side=1))
with(subset(bw, Female==0), rug(x=RESPTIME, col="blue", side=1, line=-1))
grid()
anova(step.1, glm.ns.1, test="Chisq")
glm.ns.2 <- update(step.1, . ~ . - AGE + ns(AGE, df=5))
par(mfrow=c(1, 1))
plot.gam(glm.ns.2, rugplot=FALSE, se=TRUE, terms="ns(AGE, df = 5)")
with(subset(bw, Female==1), rug(x=AGE, col="red", side=1))
with(subset(bw, Female==0), rug(x=AGE, col="blue", side=1, line=-1))
grid()
abline(v=c(56, 65, 73, 80), col="green")
anova(step.1, glm.ns.2, test="Chisq")
glm.ns.2.2 <- update(step.1, . ~ . - AGE + ns(AGE, df=2))
glm.ns.2.3 <- update(step.1, . ~ . - AGE + ns(AGE, df=3))
glm.ns.2.4 <- update(step.1, . ~ . - AGE + ns(AGE, df=4))
glm.ns.2.5 <- update(step.1, . ~ . - AGE + ns(AGE, df=5))
glm.ns.2.6 <- update(step.1, . ~ . - AGE + ns(AGE, df=6))
anova(step.1, glm.ns.2.2, glm.ns.2.3, glm.ns.2.4,
glm.ns.2.5, glm.ns.2.6, test="Chisq")
with(subset(bw, Female==1), rug(x=RESPTIME, col="red", side=1))
with(subset(bw, Female==0), rug(x=RESPTIME, col="blue", side=1, line=-1))
grid()
anova(step.1, glm.ns.1, test="Chisq")
glm.ns.1 <- update(step.1, . ~ . - RESPTIME + ns(RESPTIME, df=5))
plot.gam(glm.ns.1, rugplot=FALSE, se=TRUE)
with(subset(bw, Female==1), rug(x=RESPTIME, col="red", side=1))
with(subset(bw, Female==0), rug(x=RESPTIME, col="blue", side=1, line=-1))
grid()
glm.ns.2 <- update(step.1, . ~ . - AGE + ns(AGE, df=5))
par(mfrow=c(1, 1))
plot.gam(glm.ns.2, rugplot=FALSE, se=TRUE, terms="ns(AGE, df = 5)")
with(subset(bw, Female==1), rug(x=AGE, col="red", side=1))
with(subset(bw, Female==0), rug(x=AGE, col="blue", side=1, line=-1))
grid()
abline(v=c(56, 65, 73, 80), col="green")
anova(step.1, glm.ns.2, test="Chisq")
terms(glm.ns.2)
glm.ns.2.2 <- update(step.1, . ~ . - AGE + ns(AGE, df=2))
glm.ns.2.3 <- update(step.1, . ~ . - AGE + ns(AGE, df=3))
glm.ns.2.4 <- update(step.1, . ~ . - AGE + ns(AGE, df=4))
glm.ns.2.5 <- update(step.1, . ~ . - AGE + ns(AGE, df=5))
glm.ns.2.6 <- update(step.1, . ~ . - AGE + ns(AGE, df=6))
anova(step.1, glm.ns.2.2, glm.ns.2.3, glm.ns.2.4,
glm.ns.2.5, glm.ns.2.6, test="Chisq")
anova(step.1, glm.ns.2.2, glm.ns.2.3, glm.ns.2.4,
glm.ns.2.5, glm.ns.2.6, test="F")
anova(step.1, glm.ns.2.2, glm.ns.2.3, glm.ns.2.4,
glm.ns.2.5, glm.ns.2.6, test="Chisq")
gam.ns.2.gam <- gam(Dischrge ~ RESPTIME + s(AGE, df=5) +
Female + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
gam.ns.2.mgcv.1 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, by=GENDER, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
gam.ns.2.mgcv.2 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
plot(gam.ns.2.mgcv.1)
plot(gam.ns.2.mgcv.2)
library("mgcv")  # Now do fits using mgcv.
gam.ns.2.mgcv.1 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, by=GENDER, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
gam.ns.2.mgcv.2 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
plot(gam.ns.2.mgcv.1)
plot(gam.ns.2.mgcv.1)
library("mgcv")  # Now do fits using mgcv.
gam.ns.2.mgcv.1 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, by=GENDER, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
gam.ns.2.mgcv.2 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
plot(gam.ns.2.mgcv.1)
plot(gam.ns.2.mgcv.2)
detach("package:gam", unload=TRUE)
gam.ns.2.mgcv.1 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, by=GENDER, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
gam.ns.2.mgcv.2 <- gam(Dischrge ~ RESPTIME + s(AGE, k=5, bs="cr") + GENDER + Black + WITN + BCPR + PARAWIT + RYTHM,
data=bw, family=binomial)
plot(gam.ns.2.mgcv.1)
plot(gam.ns.2.mgcv.2)
?s
memory.limit()
memory.size()
data(iris)
head(iris,10)
log.ir <- log(iris[,1:4])
ir.species <- iris[,5]
?prcomp
ir.pca <- prcomp(log.ir, center = TRUE, scale. = TRUE)
print(ir.pca)
plot(ir.pca, type = "l")
predict(ir.pca, newdata = tail(log.ir, 2))
library(devtools)
install_github("ggbiplot", "vqv")
library(ggbiplot)
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
View(iris)
View(log.ir)
example <- function(){
data(iris)
head(iris,10)
log.ir <- log(iris[,1:4])
ir.species <- iris[,5]
ir.pca <- prcomp(log.ir, center = TRUE, scale. = TRUE)
print(ir.pca)
plot(ir.pca, type = "l")
predict(ir.pca, newdata = tail(log.ir, 2))
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
}
example()
install_github("ggbiplot", "vqv")
library(devtools)
install_github("ggbiplot", "vqv")
library(ggbiplot)
example()
?write.csv
a <- c(1:1000)
splitData <- function(data, numberOfSplits){
rep.num <- nrow(data)/numberOfSplits
chunks <- split(data, sample(rep(1:numberOfSplits,rep.num)))
return(chunks)
}
splitData(a, 20)
b <- splitData(a, 20)
chunks <- split(a, sample(rep(1:5, 200)))
chunks
as.data.frame(a)
a <- as.data.frame(a)
splitData(a, 5)
library("class")
?knn
attach(mtcars)
?predict
library(arm)
?bayesglm
?naiveBayes
data <- as.data.frame(MASS)
library(MASS)
data <- as.data.frame(MASS)
data <- as.data.frame(iris)
head(data)
bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data)
bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.mean = 1, prior.df = 3)
bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data)
bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,prior.scale=2.5, prior.df=7)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,prior.scale=2.5, prior.df=7)
display(M5)
M1 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data)
display(M1)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.scale=2.5, prior.df=7, prior.mean = 4)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width, family = gaussian, data = data)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.scale=2.5, prior.df=Inf, prior.mean = 4)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.scale=Inf, prior.df=Inf, prior.mean = 4)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=Inf, prior.mean = 4, prior.scale = 2)
display(M5)
head(data)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=Inf, prior.mean = 10, prior.scale = 2)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=Inf, prior.mean = 10, prior.scale = 20)
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=Inf, prior.mean = c(5,5), prior.scale = c(10,20))
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=c(1,1), prior.mean = c(5,5), prior.scale = c(10,20))
display(M5)
M1 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data)
display(M1)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=c(1,1), prior.mean = c(5,5), prior.scale = c(0.5,0.2))
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=c(1,1), prior.mean = c(-5,-5), prior.scale = c(0.5,0.2))
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data, prior.df=Inf, prior.mean = c(-5,-5), prior.scale = c(0.5,0.2))
display(M5)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,
prior.df=Inf, prior.mean = c(-5,-5), prior.scale = c(0.5,0.2))
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,
prior.df=Inf, prior.mean = c(-5,-5), prior.scale = c(0.5,0.2))
setwd("~/datafest")
housing <- read.csv("landdata-states.csv")
head(housing[1:5])
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) + geom_histogram()
View(housing)
ggplot(subset(housing, State %in% c("MA", "TX")), aes(x = Date, y=Home.Value, color = State)) + geom_point()
hp2001Q1 <- subset(housing, Date == 2001.25)
ggplot(hp2001Q1, aes(y = Structure.Cost, x = Land.Value)) + geom_point()
ggplot(hp2001Q1, aes(y = Structure.Cost, x = log(Land.Value))) + geom_point()
p1 <- ggplot(hp2001Q1, aes(y = Structure.Cost, x = log(Land.Value)))
p1 + geom_point(aes(color = Home.Value)) + geom_line(aes(y = pred.SC))
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(y = Structure.Cost, x = log(Land.Value)))
p1 + geom_point(aes(color = Home.Value)) + geom_line(aes(y = pred.SC))
p1 + geom_point(aes(color = Home.Value)) + geom_line(aes(y = pred.SC))
ggplot(hp2001Q1, aes(y = Structure.Cost, x = Land.Value)) + geom_point()
p1 + geom_point(aes(color = Home.Value)) + geom_line(aes(y = pred.SC))
p1 + geom_point(aes(color = Home.Value)) + geom_smooth()
p1 + geom_text(aes(label = State), size = 3)
library(ggrepel)
p1 + geom_point() + geom_text_repel(aes(label = State), size = 3)
p5 <- ggplot(housing, aes(x = Date, y = Home.Value))
p5 + geom_line(aes(color = State))
(p5 <- p5 + geom_line() +
facet_wrap(~State, ncol = 10))
p5 + theme_minimal() + theme(text = element_text(color = "turquoise"))
eco <- read.csv("EconomistData.csv")
head(eco)
graph <- ggplot(eco, aes(x = CPI, y = HDI)) + labs(x = "Corruption Perceptions Index, 2011 (10 = least corrupt)",
y = "Human Development Index, 2011 (1 = best)",
title = "Corruption and Human Development",
size = 5, family = "Helvetic Neue")
p1 <- graph + theme(legend.position = "top", axis.text = element_text(size = 9)) + geom_point(pch=21, aes(color = Region), size = 2) + geom_smooth(color = "red", size = 1, method = "glm", formula = y ~ splines::bs(x, 3), se=FALSE)
p1 + geom_text_repel(label = c(rep("",14),as.character(eco$Country[15:20]), rep("", 153))) + scale_color_manual(values = c("#E53935","#673AB7","#009688","#01579B","#1B5E20","#FF8F00"))
?spline::bs
?spline
?spline::bs()
?bs
+ geom_smooth(color = "red", size = 1, method = "glm", formula = y ~ bs(x, 3), se=FALSE)
?prcomp
head(eco)
library(ggfortify)
prcomp(df)
df <- iris[c(1, 2, 3, 4)]
head(iris)
prcomp(df)
autoplot(prcomp(df), data = iris, colour = 'Species')
autoplot(prcomp(df), data = iris, colour = 'Species', label = TRUE, label.size = 3)
autoplot(prcomp(df), data = iris, colour = 'Species', loadings = TRUE, loadings.colour = 'pink', loadings.label = TRUE, loadings.label.size = 4)
autoplot(kmeans(USArrests, 3), data = USArrests)
autoplot(kmeans(USArrests, 3), data = USArrests, label = TRUE, label.size = 3)
autoplot(pam(iris[-5], 3), frame = TRUE, frame.type = 'norm', loadings = TRUE, loadings.colour = 'pink', loadings.label = TRUE, loadings.label.size = 4)
autoplot(pam(iris[-5], 3), frame = TRUE, frame.type = 'norm', loadings = TRUE, loadings.colour = 'pink', loadings.label = TRUE, loadings.label.size = 4)
library(cluster)
autoplot(pam(iris[-5], 3), frame = TRUE, frame.type = 'norm', loadings = TRUE, loadings.colour = 'pink', loadings.label = TRUE, loadings.label.size = 4)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,
prior.df=Inf, prior.mean = c(-5,-5))
library(arm)
library(MASS)
?bayesglm
data <- as.data.frame(iris)
head(data)
#Bayesian Rules
M1 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data)
display(M1)
#Prior Settings
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,
prior.df=Inf, prior.mean = c(-5,-5))
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,
prior.df=Inf, prior.mean = c(-5,-5))
display(M5)
head(data)
M5 <- bayesglm(Sepal.Length ~ Sepal.Width + Petal.Length, family = gaussian, data = data,
prior.df=Inf, prior.mean = c(4.8,3.3))
display(M5)
nrow(data)
?predict
data$predict.B <- predict.glm(M5, newdata = data, type = "response")
head(data)
t.test(data$Sepal.Length, data$predict.B)
library(ggplot2)
ggplot(data = data, x = predict.B) + geom_point()
ggplot(data = data, x = predict.B) + geom_hist()
ggplot(data = data, x = predict.B) + geom_histogram()
ggplot(data = data, x = predict.B) + geom_histogram(bins = "1")
ggplot(data = data, aes(x = predict.B)) + geom_histogram()
ggplot(data = data, aes(x = Sepal.Length)) + geom_histogram()
ggplot(data = data, aes(x = Sepal.Length)) + geom_histogram(bins = 1)
ggplot(data = data, aes(x = Sepal.Length)) + geom_histogram(bins = 120)
